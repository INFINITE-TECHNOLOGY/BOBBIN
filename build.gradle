/*
File
https://github.com/virtualdogbert/GroovyConfigWriter/blob/master/build.gradle
has been used as basis for this file.
 */

plugins {
    id "groovy"
    id "maven-publish"
    id "com.jfrog.bintray" version "1.8.4"
    id "com.jfrog.artifactory" version "4.8.1"
    id "idea"
    id "jacoco"
    id "enterprise.groovy.plugin" version "1.0.1"
}

sourceCompatibility = 1.8
group = "io.i-t"
version = "2.0.11-SNAPSHOT"
description = "Groovy Slf4j logger"

wrapper {
    gradleVersion = "5.5.1"
}

repositories {
    jcenter()
}

sourceSets {
    main.groovy.srcDirs = ["src/main/groovy"]
    main.java.srcDirs = ["src/main/java"]
    test.groovy.srcDirs = ["src/test/groovy"]
}

dependencies {
    compileOnly "org.codehaus.groovy:groovy-all:2.5.4"
    compile "org.slf4j:slf4j-api:1.7.25"
    compile "com.fasterxml.jackson.core:jackson-databind:2.9.7"
    compile "io.i-t:supplies:1.1.8"
    compile group: 'org.apache.commons', name: 'commons-lang3', version: '3.9'
    testCompile "org.codehaus.groovy:groovy-all:2.5.4"
    testCompile group: 'org.testng', name: 'testng', version: '6.14.3'
}

task sourceJar(type: Jar) {
    from sourceSets.main.allSource
    classifier "sources"
}

task javadocJar(type: Jar, dependsOn: javadoc) {
    classifier = 'javadoc'
    from javadoc.destinationDir
}

ext {
    theTitle = "Groovy Slf4j logger"
    titleForDocumentation = archivesBaseName + " " + version
    packageTitle = group
    description = "Groovy Slf4j logger"
}

publishing {
    publications {
        groovyMaven(MavenPublication) {
            from components.java
            //https://github.com/webjars/webjars-locator-weblogic/blob/master/build.gradle
            pom.withXml {
                asNode().children().last() + {
                    resolveStrategy = Closure.DELEGATE_FIRST
                    name bintray.pkg.name
                    description bintray.pkg.desc
                    url bintray.pkg.websiteUrl
                    scm {
                        url bintray.pkg.vcsUrl
                        connection bintray.pkg.vcsUrl
                        developerConnection bintray.pkg.vcsUrl
                    }
                    licenses {
                        license {
                            name "Apache-2.0"
                            url "http://www.apache.org/licenses/"
                            distribution 'repo'
                        }
                    }
                    developers {
                        developer {
                            id 'apryamostanov'
                            name 'Anton Pryamostanov'
                            email 'anton.pryamostanov@gmail.com'
                        }
                    }
                }
            }
            artifact(sourceJar) {
                classifier "sources"
            }
            artifact(javadocJar) {
                classifier "javadoc"
            }
        }
    }
}


artifacts {
    archives(sourceJar)
}

bintray {
    user = System.getProperty("bintrayuser")
    key = System.getProperty("bintraypassword")
    publications = ["groovyMaven"]
    def projectName = project.name
    def projectDescription = project.description
    pkg {
        userOrg = "infinite-technology"
        repo = "m2"
        name = "bobbin"
        desc = "Groovy Slf4j Logger"
        issueTrackerUrl = "https://github.com/INFINITE-TECHNOLOGY/BOBBIN/issues"
        vcsUrl = "https://github.com/INFINITE-TECHNOLOGY/BOBBIN.git"
        websiteUrl = "https://i-t.io/Bobbin/"
        licenses = ["Apache-2.0"]
    }
}

artifactory {
    contextUrl = 'http://oss.jfrog.org'
    publish {
        repository {
            repoKey = 'oss-snapshot-local'
            username = System.getProperty('bintray.user')
            password = System.getProperty('bintray.key')
        }
        defaults {
            publications('groovyMaven')
            publishArtifacts = true
            publishPom = true
        }
    }
    resolve {
        repoKey = 'jcenter'
    }
    clientConfig.info.setBuildNumber(System.getProperty('build.number'))
}

test {
    useTestNG {
        testLogging {
            events "passed", "skipped", "failed"
            exceptionFormat "full"
        }
    }
}

jacocoTestReport {
    reports {
        xml.enabled true
        html.enabled false
    }
}

check.dependsOn jacocoTestReport

bintrayUpload.dependsOn javadocJar
configurations {
    providedRuntime
    compile.exclude(group: 'junit')
    compile.exclude(group: 'org.junit.platform')
}